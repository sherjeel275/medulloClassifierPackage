library('devtools')
library('roxygen2')
getwd()
document
document()
document()
document()
getwd()
setwd("/Users/arifs1/medulloPackage/R")
document
document()
document()
getwd()
setwd("/Users/arifs1/medulloClassifier1")
document()
document()
document(())
document()
document()
document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
getwd(0)
getwd()
setwd("/Users/arifs1/medulloPackage")
devtools::document()
library('devtools')
library('roxygen2')
devtools::document()
devtools::document()
document()
devtools::document()
document()
library(medulloPackage)
library(roxygen2)
devtools::document()
devtools::document()
usethis::use_vignette("my-vignette")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(medulloPackage)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
devtools::document()
devtools::document()
browseVignettes("pheatmap")
browseVignettes("GSVA")
browseVignettes("preprocessCore")
browseVignettes("caret")
?vignette
devtools::document()
?vignette
?vignette
devtools::document()
?vignette
devtools::document()
devtools::document()
?vignette
devtools::document()
?vignette
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
getwd()
setwd("/Users/arifs1/medulloPackage/R")
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
library(medulloPackage)
calcStats()
shiny::runApp('~/shiny1')
runApp('first')
runApp('~/shiny1/first')
runApp('~/shiny1/first')
runApp('~/shiny1/first')
runApp('~/shiny1/first')
devtools::document()
library(medulloPackage)
getwd()
source('classify.R')
source('calcStats.R')
source('formatData.R')
source('featSelect.R')
# Format Data
formatData(signatureProbesLoc="../../data/bestFeaturesNew.RDS",medulloGeneSetsUpLoc="../../data/medulloSetsUp.RDS")
getwd()
setwd("/Users/arifs1/MedulloClassifier/code/V5_CombosUp")
# Format Data
formatData(signatureProbesLoc="../../data/bestFeaturesNew.RDS",medulloGeneSetsUpLoc="../../data/medulloSetsUp.RDS")
print("Done Formatting Data")
medulloSetsUp <- readRDS("../../data/medulloSetsUp.RDS")
################################
#Purpose: Process Data into correct format
#Author: Sherjeel Arif
#Date: 8/5/2019
################################
#######################
# Required Libraries
#######################
library("GSVA");
library("caret");
library("preprocessCore");
library("ggplot2");
library("lattice");
library("reshape2");
source("calcScore.R")
signatureGenes <- function(exprs = NULL) {
################################
#Now read in signature genes
#Filter matrix to signature genes
#and Create Gene Ratios
################################
signatureProbes <- readRDS(signatureProbesLoc)
medulloGeneSetsUp <- readRDS(medulloGeneSetsUpLoc)
#medulloGeneSetsUp <- readRDS(medulloGeneSetsUpLoc)
getGenes <- function(x)
{
out <- strsplit(x, split="_")
output <- c(out[[1]])
}
signatureGenes <- sapply(signatureProbes, FUN=getGenes)
signatureGenes <- as.character(signatureGenes);
signatureGenes <- unique(signatureGenes);
#Filter Matrix
exprs_SG <- exprs[intersect(rownames(exprs), signatureGenes), ]
#Create Ratios
createRatio <- function(x)
{
g1 <- x[1];
g2 <- x[2];
g1g2_ratio <- 2^(exprs[g1,]-exprs[g2,])
return(g1g2_ratio)
}
corGenes <- cor(t(exprs_SG));
corGenes <- data.frame(melt(corGenes));
corGenes <- corGenes[corGenes[,"value"]<.99,];
exprs <- as.matrix(exprs);
geneRatioOut <- apply(corGenes, FUN=createRatio, MARGIN=1)
geneRatioOut <- data.frame(t(geneRatioOut));
rownames(geneRatioOut) <- paste(corGenes[,1], corGenes[,2], sep="_");
colnames(geneRatioOut) <- colnames(exprs)
################################
#Filter to signature ratios
#Create Heatmap
################################
geneRatioOut <- geneRatioOut[intersect(rownames(geneRatioOut), signatureProbes),]
return(geneRatioOut)
}
signatureProbes <- readRDS(signatureProbesLoc)
signatureProbesLoc="../../data/bestFeaturesNew.RDS"
medulloGeneSetsUpLoc="../../data/medulloSetsUp.RDS"
signatureProbes <- readRDS(signatureProbesLoc)
medulloGeneSetsUp <- readRDS(medulloGeneSetsUpLoc)
getGenes <- function(x)
{
out <- strsplit(x, split="_")
output <- c(out[[1]])
}
signatureGenes <- sapply(signatureProbes, FUN=getGenes)
signatureGenes <- as.character(signatureGenes);
signatureGenes <- unique(signatureGenes);
#Filter Matrix
exprs_SG <- exprs[intersect(rownames(exprs), signatureGenes), ]
#Create Ratios
createRatio <- function(x)
{
g1 <- x[1];
g2 <- x[2];
g1g2_ratio <- 2^(exprs[g1,]-exprs[g2,])
return(g1g2_ratio)
}
corGenes <- cor(t(exprs_SG));
#Filter Matrix
exprs_SG <- exprs[intersect(rownames(exprs), signatureGenes), ]
###################
# Format GSE37418
###################
#load data
load("../../data/loadedGSE_37418.RData")
medulloGeneSetsUp <- readRDS(medulloGeneSetsUpLoc)
#Convert expression matrix to gene symbol
geneAnnot <- read.delim("../../data/GPL570-55999.txt", skip=16);
geneAnnot <- geneAnnot[,c("ID", "Gene.Symbol")];
exprs_37418_Tmp <- normalize.quantiles(as.matrix(exprs_37418));
rownames(exprs_37418_Tmp) <- rownames(exprs_37418);
colnames(exprs_37418_Tmp )<- colnames(exprs_37418);
exprs_37418 <- exprs_37418_Tmp
exprs_37418 <- data.frame(exprs_37418);
exprs_37418[,"Max"] <- apply(exprs_37418, FUN=max, MARGIN=1)
exprs_37418[,"Probe"] <- rownames(exprs_37418);
exprs_37418 <- merge(exprs_37418, geneAnnot, by.x="Probe", by.y="ID");
exprs_37418 <- exprs_37418[order(-exprs_37418[,"Max"]),]
exprs_37418 <- exprs_37418[exprs_37418[,"Gene.Symbol"]!="",]
exprs_37418 <- exprs_37418[!duplicated(exprs_37418[,"Gene.Symbol"]),];
rownames(exprs_37418) <- exprs_37418[,"Gene.Symbol"];
exprs_37418 <- exprs_37418[-1];
exprs_37418 <- exprs_37418[1:(ncol(exprs_37418)-2)]
#format annot
annot_37418[,43] <- gsub("G3", "Group3", annot_37418[,43])
annot_37418[,43] <- gsub("G4", "Group4", annot_37418[,43])
annot_37418[,43] <- gsub("SHH OUTLIER", "SHH", annot_37418[,43])
actual37418 <- as.character(annot_37418[,"subgroup:ch1"])
# Get gene ratio out
grOut_37418 <- signatureGenes(exprs = exprs_37418)
# Save the data
save(grOut_37418, actual37418, file = '../../data/GSE37418.RData')
# Get gene ratio out
grOut_37418 <- signatureGenes(exprs = exprs_37418)
signatureGenes <- function(exprs = NULL) {
################################
#Now read in signature genes
#Filter matrix to signature genes
#and Create Gene Ratios
################################
signatureProbes <- readRDS(signatureProbesLoc)
medulloGeneSetsUp <- readRDS(medulloGeneSetsUpLoc)
#medulloGeneSetsUp <- readRDS(medulloGeneSetsUpLoc)
getGenes <- function(x)
{
out <- strsplit(x, split="_")
output <- c(out[[1]])
}
signatureGenes <- sapply(signatureProbes, FUN=getGenes)
signatureGenes <- as.character(signatureGenes);
signatureGenes <- unique(signatureGenes);
#Filter Matrix
exprs_SG <- exprs[intersect(rownames(exprs), signatureGenes), ]
#Create Ratios
createRatio <- function(x)
{
g1 <- x[1];
g2 <- x[2];
g1g2_ratio <- 2^(exprs[g1,]-exprs[g2,])
return(g1g2_ratio)
}
corGenes <- cor(t(exprs_SG));
corGenes <- data.frame(melt(corGenes));
corGenes <- corGenes[corGenes[,"value"]<.99,];
exprs <- as.matrix(exprs);
geneRatioOut <- apply(corGenes, FUN=createRatio, MARGIN=1)
geneRatioOut <- data.frame(t(geneRatioOut));
rownames(geneRatioOut) <- paste(corGenes[,1], corGenes[,2], sep="_");
colnames(geneRatioOut) <- colnames(exprs)
################################
#Filter to signature ratios
#Create Heatmap
################################
geneRatioOut <- geneRatioOut[intersect(rownames(geneRatioOut), signatureProbes),]
return(geneRatioOut)
}
# Get gene ratio out
grOut_37418 <- signatureGenes(exprs = exprs_37418)
# Save the data
save(grOut_37418, actual37418, file = '../../data/GSE37418.RData')
pred37418 <- classify(grOut_37418,medulloSetsUp)
calcStats(actual37418,pred37418)
calcStats(actual37418,pred37418)
