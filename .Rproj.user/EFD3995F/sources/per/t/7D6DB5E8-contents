################################
#Purpose: Process Data into correct format
#Author: Sherjeel Arif
#Date: 8/5/2019
################################
#######################
# Required Libraries
#######################
library("GSVA");
library("caret");
library("preprocessCore");
library("ggplot2");
library("lattice");
library("reshape2");
source("calcScore.R")

formatData <- function(signatureProbesLoc="../../data/bestFeaturesNew.RDS",medulloGeneSetsUpLoc="../../data/medulloSetsUp.RDS")
{

  signatureGenes <- function(exprs = NULL) {
    ################################
    #Now read in signature genes
    #Filter matrix to signature genes
    #and Create Gene Ratios
    ################################

    signatureProbes <- readRDS(signatureProbesLoc)
    medulloGeneSetsUp <- readRDS(medulloGeneSetsUpLoc)
    #medulloGeneSetsUp <- readRDS(medulloGeneSetsUpLoc)

    getGenes <- function(x)
    {
      out <- strsplit(x, split="_")
      output <- c(out[[1]])
    }

    signatureGenes <- sapply(signatureProbes, FUN=getGenes)
    signatureGenes <- as.character(signatureGenes);
    signatureGenes <- unique(signatureGenes);

    #Filter Matrix
    exprs_SG <- exprs[intersect(rownames(exprs), signatureGenes), ]

    #Create Ratios
    createRatio <- function(x)
    {
      g1 <- x[1];
      g2 <- x[2];
      g1g2_ratio <- 2^(exprs[g1,]-exprs[g2,])
      return(g1g2_ratio)
    }

    corGenes <- cor(t(exprs_SG));
    corGenes <- data.frame(melt(corGenes));
    corGenes <- corGenes[corGenes[,"value"]<.99,];

    exprs <- as.matrix(exprs);
    geneRatioOut <- apply(corGenes, FUN=createRatio, MARGIN=1)
    geneRatioOut <- data.frame(t(geneRatioOut));

    rownames(geneRatioOut) <- paste(corGenes[,1], corGenes[,2], sep="_");
    colnames(geneRatioOut) <- colnames(exprs)

    ################################
    #Filter to signature ratios
    #Create Heatmap
    ################################

    geneRatioOut <- geneRatioOut[intersect(rownames(geneRatioOut), signatureProbes),]
    return(geneRatioOut)

  }
	###################
	# Format GSE37418
	###################
	#load data
	load("../../data/loadedGSE_37418.RData")
  medulloGeneSetsUp <- readRDS(medulloGeneSetsUpLoc)

	#Convert expression matrix to gene symbol
	geneAnnot <- read.delim("../../data/GPL570-55999.txt", skip=16);
	geneAnnot <- geneAnnot[,c("ID", "Gene.Symbol")];
	exprs_37418_Tmp <- normalize.quantiles(as.matrix(exprs_37418));
	rownames(exprs_37418_Tmp) <- rownames(exprs_37418);
	colnames(exprs_37418_Tmp )<- colnames(exprs_37418);
	exprs_37418 <- exprs_37418_Tmp
	exprs_37418 <- data.frame(exprs_37418);
	exprs_37418[,"Max"] <- apply(exprs_37418, FUN=max, MARGIN=1)
	exprs_37418[,"Probe"] <- rownames(exprs_37418);
	exprs_37418 <- merge(exprs_37418, geneAnnot, by.x="Probe", by.y="ID");
	exprs_37418 <- exprs_37418[order(-exprs_37418[,"Max"]),]

	exprs_37418 <- exprs_37418[exprs_37418[,"Gene.Symbol"]!="",]
	exprs_37418 <- exprs_37418[!duplicated(exprs_37418[,"Gene.Symbol"]),];
	rownames(exprs_37418) <- exprs_37418[,"Gene.Symbol"];
	exprs_37418 <- exprs_37418[-1];
	exprs_37418 <- exprs_37418[1:(ncol(exprs_37418)-2)]

	#format annot
	annot_37418[,43] <- gsub("G3", "Group3", annot_37418[,43])
	annot_37418[,43] <- gsub("G4", "Group4", annot_37418[,43])
	annot_37418[,43] <- gsub("SHH OUTLIER", "SHH", annot_37418[,43])
	actual37418 <- as.character(annot_37418[,"subgroup:ch1"])

	# Get gene ratio out
	grOut_37418 <- signatureGenes(exprs = exprs_37418)


	# Save the data
	save(grOut_37418, actual37418, file = '../../data/GSE37418.RData')


	###################
	# Process GSE85217
	###################
	#load data
	load("../../data/loadedGSE_85217.RData")

	#Convert expression matrix to gene symbol
	mapping <- read.delim("../../data/mappingRefseq.txt") # read in file data into a matrix
	mapping <- mapping[,c(1,3)]; # select only columns 1 and 3
	mapping <- unique(mapping); #returns only unique values in mapping
	geneAnnot <- mapping[mapping[,2]!="",] # remove rows with no HGNC value and store into geneAnnot
	mapping <- mapping[!duplicated(mapping[,1]),]

	colnames(geneAnnot) <- c("ID", "HGNC.symbol"); # rename the 2 columns
	exprs_85217_Tmp <- normalize.quantiles(as.matrix(exprs_85217));
	rownames(exprs_85217_Tmp) <- gsub("_at", "", rownames(exprs_85217));
	colnames(exprs_85217_Tmp )<- colnames(exprs_85217);
	exprs_85217 <- exprs_85217_Tmp
	exprs_85217 <- data.frame(exprs_85217);
	exprs_85217[,"Max"] <- apply(exprs_85217, FUN=max, MARGIN=1)
	exprs_85217[,"Probe"] <- rownames(exprs_85217);
	exprs_85217 <- merge(exprs_85217, geneAnnot, by.x="Probe", by.y="ID");
	exprs_85217 <- exprs_85217[order(-exprs_85217[,"Max"]),]

	exprs_85217 <- exprs_85217[!is.na(exprs_85217[,"HGNC.symbol"]),]
	exprs_85217 <- exprs_85217[!duplicated(exprs_85217[,"HGNC.symbol"]),];
	rownames(exprs_85217) <- exprs_85217[,"HGNC.symbol"];
	exprs_85217 <- exprs_85217[-1];
	exprs_85217 <- exprs_85217[1:(ncol(exprs_85217)-2)]

	#format annot
	annot_85217[,"subgroup:ch1"] <- gsub("Group 3", "Group3", annot_85217[,"subgroup:ch1"])
	annot_85217[,"subgroup:ch1"] <- gsub("Group 4", "Group4", annot_85217[,"subgroup:ch1"])
	actual85217 <- as.character(annot_85217[,"subgroup:ch1"])

	# Get gene ratio out
	grOut_85217 <- signatureGenes(exprs = exprs_85217)

	# Save the data
	save(grOut_85217, actual85217, file = '../../data/GSE85217.RData')

	###################
	# Process GSE109401
	###################
	#load data
	load("../../data/loadedGSE_109401.RData")

	#Convert expression matrix to gene symbol
	geneAnnot <- read.delim("../../data/GPL16686.txt", skip=8);
	mapping <- read.delim("../../data/mappingRefseq.txt")
	mapping <- mapping[3:4];
	mapping <- unique(mapping);
	mapping <- mapping[mapping[,2]!="",]
	mapping <- mapping[!duplicated(mapping[,2]),]
	geneAnnot <- merge(geneAnnot, mapping, by.x="GB_ACC", by.y="RefSeq.mRNA.ID", all.x=T)

	geneAnnot <- geneAnnot[,c("ID", "HGNC.symbol")];
	colnames(geneAnnot)[2] <- "Gene.Symbol";
	exprs_109401_Tmp <- normalize.quantiles(as.matrix(exprs_109401));
	rownames(exprs_109401_Tmp) <- rownames(exprs_109401);
	colnames(exprs_109401_Tmp )<- colnames(exprs_109401);
	exprs_109401 <- exprs_109401_Tmp
	exprs_109401 <- data.frame(exprs_109401);
	exprs_109401[,"Max"] <- apply(exprs_109401, FUN=max, MARGIN=1)
	exprs_109401[,"Probe"] <- rownames(exprs_109401);
	exprs_109401 <- merge(exprs_109401, geneAnnot, by.x="Probe", by.y="ID");
	exprs_109401 <- exprs_109401[order(-exprs_109401[,"Max"]),]

	exprs_109401 <- exprs_109401[!is.na(exprs_109401[,"Gene.Symbol"]),]
	exprs_109401 <- exprs_109401[!duplicated(exprs_109401[,"Gene.Symbol"]),];
	rownames(exprs_109401) <- exprs_109401[,"Gene.Symbol"];
	exprs_109401 <- exprs_109401[-1];
	exprs_109401 <- exprs_109401[1:(ncol(exprs_109401)-2)]

	#format annot
	annot_109401[,"subgroup:ch1"] <- gsub("Group 3", "Group3", annot_109401[,"subgroup:ch1"])
	annot_109401[,"subgroup:ch1"] <- gsub("Group 4", "Group4", annot_109401[,"subgroup:ch1"])
	actual109401 <- as.character(annot_109401[,"subgroup:ch1"])

	# Get gene ratio out
	grOut_109401 <- signatureGenes(exprs = exprs_109401)

	# Save the data
	save(grOut_109401, actual109401, file = '../../data/GSE109401.RData')


}

